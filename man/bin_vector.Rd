% Generated by roxygen2 (4.0.2): do not edit by hand
\name{bin_vector}
\alias{bin_vector}
\title{Bin vectors}
\usage{
bin_vector(x, width = 1, origin = min(x, na.rm = TRUE), weight = NULL,
  closed = c("right", "left"), pad = FALSE)
}
\arguments{
\item{x}{A numeric vector to bin.

  You can also bin S3 objects that are build on top of integer and
  double atomic vectors, as long as there is a method for
  \code{\link{restore}()}.}

\item{width}{The width of a bin. Must be positive.

  For S3 objects, the interpretation of width depends on the interpretation
  of the underlying numeric vector. For example, for dates, 1 = 1 day;
  for times 1 = 1 second; and for difftime, the units vary.}

\item{origin}{The location of the left-most bin edge. Any values smaller
than the \code{origin} will be treated as if they are missing.}

\item{weight}{If specified, an integer vector of the same length as \code{x}
giving weights. If weights are provided, the weights in each bin are
summed, rather than just counting the number of observations.}

\item{closed}{One of \code{"right"} or \code{"left"} indicating whether the
bin interval is left-closed (i.e. [a, b)), or right-closed (i.e. (a, b]).}

\item{pad}{A logical indicating whether the bins should be padded to include
an empty bin on each side. This is useful for frequency polygons which
need to go back down to zero at either end of the range.}
}
\description{
Bin a numeric vector and count how many observations fall in each bin.
Supports weights so that you can re-bin pre-binned data.
}
\examples{
x <- runif(1e6)
bin_vector(x, 0.1)

# Bin other types of object
bin_vector(Sys.time() + runif(10) * 60, 15)
bin_vector(Sys.Date() + sample(30, 10), 7)

# Performance scales linearly with the size of x, and the number
# of bins has limited impact
x <- runif(1e7)
system.time(bin_vector(x))
system.time(bin_vector(x, width = 1 / 100))
system.time(bin_vector(x, width = 1 / 1e5))
}
\keyword{internal}

