% Generated by roxygen2 (4.0.2): do not edit by hand
\name{compute_interval}
\alias{compute_interval}
\title{Convert points into intervals.}
\usage{
compute_interval(data, dir = c("x", "y"), width = NULL, align = 0.5)
}
\arguments{
\item{data}{Dataset-like object. Built-in methods for data frames,
grouped data frames and ggvis visualisations.}

\item{dir}{Direction, i.e. \code{"x"} or \code{"y"}.}

\item{width}{Width of intervals. If \code{NULL} (the default), the
width is set to the resolution of the data.}

\item{align}{Where does the existing point fall on the new interval?
0 = left edge, 0.5 = center, 1 = right edge.}
}
\value{
The original data frame, with additional columns:
 \item{'dir'min_}{left boundary of bin}
 \item{'dir'max_}{right boundary of bin}
}
\description{
This compute function is often used in conjunction with
\code{\link{compute_count}}, when used on data with a continuous x variable.
By default, the computed width will be equal to the resolution of the data,
or, in other words the smallest difference between two values in the data.
}
\examples{
mtcars \%>\% compute_count(~cyl) \%>\% compute_interval(width = 2)

# cf. binned data
mtcars \%>\% compute_bin(~cyl, width = 2)
}
\seealso{
\code{\link{compute_bin}} For counting cases within ranges of
  a continuous variable.

\code{\link{compute_count}} For counting cases at specific values
  of a variable.
}

