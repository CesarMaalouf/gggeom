% Generated by roxygen2 (4.0.2): do not edit by hand
\name{compute_vw_distance}
\alias{compute_vw_distance}
\title{Compute the distance for paths with the Visvalingam-Whyatt algorithm.}
\usage{
compute_vw_distance(data, x_var, y_var)
}
\arguments{
\item{data}{A data frame like object.}

\item{x_var,y_var}{Formulas specifying either variable names or expressions
to use as x and y positions.}
}
\value{
A data frame with columns: \item{x_,y_}{Position}
  \item{distance_}{Distance between point and sub-line}
}
\description{
Visvalingam-Whyatt is a method of simplifying lines. It starts by
computing the area of the triangle formed by each sequence of three points.
(The triangles are overlapping.) Then it removes the middle point of the
triangle with the smallest area, and recomputes the area of the neighbor
triangles that are affected by the removal of that point. This repeats until
all the points are removed except the two endpoints.
}
\details{
See \url{http://bost.ocks.org/mike/simplify/} for more details.

Note that this function does not do any simplification - it just adds an
additional column the measures the area of the triangle at each point (where
the point is the middle point of the triangle). Filtering on this column will
perform simplification.
}
\examples{
df <- data.frame(x = c(1,2,3,4,5), y = c(1,1.2,3.8,3.3,5))

# compute_vw_distance(df, ~x, ~y)
}
\seealso{
\code{\link{geometry_simplify}()} for an function that works on a
  geometry and does simplification given tolerance or percentage of points to
  keep.
}

